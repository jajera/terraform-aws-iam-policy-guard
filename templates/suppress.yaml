# Suppression rules to reduce noise and prevent false positives.
# Rules are evaluated in order. The first matching rule will suppress the event.
suppressions:
  # ---------------------------------------------------------------------------
  # 1. Self-Suppression (Most Important)
  #    Suppress alerts generated by this tool's own remediation activities.
  # ---------------------------------------------------------------------------
  - name: "IAMPolicyMonitorSelfSuppression"
    description: "Suppress alerts generated by the IAM Policy Monitor's own remediation and testing activities to prevent feedback loops."
    conditions:
      # Matches the IAM role used by the remediator Lambda function and testing infrastructure.
      principals:
        - "arn:aws:iam::*:role/*-remediator-role"
        - "arn:aws:iam::*:role/*-codebuild-testing-role"
      # Events that are generated by the remediator when it fixes a violation.
      event_names:
        - "DetachUserPolicy"
        - "DetachRolePolicy"
        - "DeleteUserPolicy"
        - "DeleteRolePolicy"
        - "DeletePolicy"

  # ---------------------------------------------------------------------------
  # 2. Known AWS Service Noise
  #    Suppress events from common AWS services that manage their own roles.
  # ---------------------------------------------------------------------------
  - name: "AWSServiceRoles"
    description: "Suppress alerts for AWS service-linked roles and other managed services."
    conditions:
      principals:
        - "arn:aws:iam::*:role/aws-service-role/*"
        - "arn:aws:iam::*:role/AWSServiceRoleFor*"
        - "arn:aws:sts::*:assumed-role/AWSServiceRoleFor*"
        - "lambda.amazonaws.com"
        - "ec2.amazonaws.com"
        - "ecs.amazonaws.com"
        - "cloudformation.amazonaws.com"
        - "backup.amazonaws.com"
        - "autoscaling.amazonaws.com"
        - "datapipeline.amazonaws.com"

  # ---------------------------------------------------------------------------
  # 3. Known Automation & IaC Tools
  #    Suppress low-risk, expected changes from infrastructure-as-code tools.
  # ---------------------------------------------------------------------------
  - name: "LowRiskAutomationTools"
    description: "Suppress low-risk IAM principal management from common IaC and automation tools."
    conditions:
      user_agents:
        - "terraform"
        - "Terraform/*"
        - "cloudformation"
        - "CloudFormation"
        - "Ansible*"
        - "Pulumi/*"
      # NOTE: Policy changes (CreatePolicy, AttachPolicy, PutPolicy) are intentionally NOT suppressed.
      event_names:
        - "CreateRole"
        - "DeleteRole"
        - "CreateUser"
        - "DeleteUser"
        - "CreateGroup"
        - "DeleteGroup"
        - "AddUserToGroup"
        - "RemoveUserFromGroup"

  # ---------------------------------------------------------------------------
  # 4. (Optional) Third-Party Security Scanners
  #    Placeholder to suppress noise from known security scanners.
  # ---------------------------------------------------------------------------
  - name: "ThirdPartySecurityScanners"
    description: "Suppress low-risk activity from known security scanners (e.g., Qualys, Inspector)."
    enabled: false # Disabled by default
    conditions:
      principals:
        # - "arn:aws:iam::*:role/qualys-scanner-role"
        # - "arn:aws:sts::*:assumed-role/inspector-role/*"
        - "security-scanner.amazonaws.com"
      event_names:
        - "CreateServiceLinkedRole" # Often created on-demand by scanners

  # 1.5 Audit Logger Inline Policy Suppression
  - name: "AuditLoggerInlinePolicy"
    description: "Suppress inline policy changes on the Audit-Logger roleâ€”required access for logging."
    conditions:
      principals:
        - "arn:aws:iam::*:role/*audit-logger-role"
      event_names:
        - "PutRolePolicy"
        - "DeleteRolePolicy"
        - "PutRolePermissionsBoundary"

# -----------------------------------------------------------------------------
# Global Suppression Settings
# These settings apply to all events after individual rules are processed.
# -----------------------------------------------------------------------------
global_settings:
  # If true, all read-only IAM operations (Get*, List*) are globally suppressed.
  # This is a highly effective way to reduce noise from monitoring tools and daily operations.
  suppress_read_only_operations: true

  # If true, suppresses any event related to AWS Service-Linked Roles.
  suppress_service_linked_roles: true

  # Suppress any violation with a severity below this threshold.
  # Recommended: "LOW" (default) to log everything, or "MEDIUM" for less noise in production.
  minimum_severity_threshold: "LOW"

  # Rate limiting to prevent alert storms.
  rate_limiting:
    max_alerts_per_hour: 20
    max_alerts_per_day: 100

  # Cooldown periods to prevent repeat notifications for the same issue.
  notification_cooldown:
    high_severity: "5m"
    medium_severity: "15m"
    low_severity: "1h"
